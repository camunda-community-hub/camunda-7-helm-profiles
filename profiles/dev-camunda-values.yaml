# Chart values for the Camunda Platform 8 Helm chart.
# This file deliberately contains only the values that differ from the defaults.
# For changes and documentation, use your favorite diff tool to compare it with:
# https://github.com/camunda/camunda-platform-helm/blob/main/charts/camunda-platform/values.yaml

# Custom values.yaml

general:
  fullnameOverride: camunda-bpm-platform-v7-rest
  replicaCount: 1

image:
  name: camunda/camunda-bpm-platform
  tag: run-latest
  command: ['./camunda.sh']
  args: ['']

extraEnvs:
- name: DB_VALIDATE_ON_BORROW
  value: "false"

database:
  driver: org.postgresql.Driver
  url: jdbc:postgresql://workflow-database-postgresql.camunda.svc.cluster.local:5432/workflow
  credentialsSecretName: workflow-database-credentials
  credentialsSecretEnabled: true

service:
  type: ClusterIP
  port: 8080
  portName: http

readinessProbe:
  enabled: true
  config:
    httpGet:
      path: /engine-rest/incident/count
      port: http
    initialDelaySeconds: 120
    periodSeconds: 60

metrics:
  enabled: true
  service:
    type: ClusterIP
    port: 9404
    portName: metrics
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/path: "/"
      prometheus.io/port: "9404"

ingress:
  enabled: true
  annotations: {
      kubernetes.io/ingress.class: nginx,
      kubernetes.io/affinity: "cookie",
      kubernetes.io/affinity-mode: "persistent",
      kubernetes.io/session-cookie-expires: "172800",
      kubernetes.io/session-cookie-max-age: "172800",
    }
    # see more config options https://kubernetes.github.io/ingress-nginx/examples/affinity/cookie/
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: camunda.127.0.0.1.nip.io
      paths: ["/"]
  tls: []
  #  - secretName: camunda-bpm-platform-tls
  #    hosts:
  #      - camunda-bpm-platform.local   - camunda-bpm-platform.local

optimize:
  enabled: false
  env:
   - name: CAMUNDA_OPTIMIZE_EMAIL_ACCESS_URL
     value: "http://optimize.127.0.0.1.nip.io"
  ingress:
    enabled: true
    host: "optimize.127.0.0.1.nip.io"

elasticsearch:
  enabled: false
  imageTag: 7.17.3
  replicas: 1
  minimumMasterNodes: 1
  # Allow no backup for single node setups
  clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"

  resources:
    requests:
      cpu: "100m"
      memory: "512M"
    limits:
      cpu: "1000m"
      memory: "2Gi"

  # Request smaller persistent volumes.
  volumeClaimTemplate:
    accessModes: [ "ReadWriteOnce" ]
    storageClassName: "standard"
    resources:
      requests:
        storage: 15Gi
